# include <iostream>
# include <conio.h>
# include <string>
using namespace std;

/*Q#1) Write a program that converts decimal number into roman number.
int main()
    {
        int num, th, h, t, u;
        string thousands[5];
        string hundreds[10]={"C","CC","CCC","CD","D","DC","DCC","DCCC","CM","M"};
        string tens[10]={"X","XX","XXX","XL","L","LX","LXX","LXXX","XC","C"};
        string units[10]={"I","II","III","IV","V","VI","VII","VIII","IX","X"};

        cout<<"Enter the decimal number  :  ";   //1746
        cin>>num;

        th=num/1000;             //  th=1       1*M
            if (th>0)   {
                for (int i=0; i<th; i++)
                {
                    thousands[i]="M";
                    cout<<thousands[i];
                }
            }

        h=(num%1000)/100;     
        cout<<hundreds[h-1];

        t=((num%1000)%100)/10;
        cout<<tens[t-1];

        u=((num%1000)%100)%10;    //  u=6    V+nI     ones=u/5 + u%5    if u/5=1 then print V and u%5=n then for i=n, print "I"  
        cout<<units[u-1];
    
    
        _getch();
        return 0;
    }*/

/*Q#2) Write a program to take an array and find the number of occurences each number had.*/
 
 int main()
{
	int list[23]={0,2,2,3,3,4,21,21,21,21,29,29,29,29,37,37,37,37,42,42,42,42,50};
	int test[23];
	int count, x, test_var, c=0;

	cout << "Numbers" << "\t\t\t" << "Occurences" << endl;

	for (int i = 0; i < 23; i++)
	{
		x = list[i];
		count = 0;
		test_var = 1;
		for (int j = 0; j < 23; j++)
		{
			if (x == list[j])
			{
				count++;
			}

		}
		for (int k = 0; k < c; k++)         // for 2nd occurence of the value(just input that value in the test array)
		{
			if (test[k] == x)
			{
				test_var = 0;               // test_var=0 so that the incoming if dont work otherwise it will print the value again
			}
		}
		if (test_var == 1)          // for 1st occurence of the value(just print the value with its counter)
		{

			cout << x << "\t\t\t" << count << endl;
			test[c] = x;
			c++;

		}
	}

	return 0;
	_getch;
}
 

/*Q#3)Create a Nested Structure, and write a program in C++ to create the objects of the following nested structure.
1.	Date Structure (having members, Year , month and day , member function:Showdata))
2.	Employee structure (having members, Empid, name, salary, joining date {followed the user defined datatype: date})

struct Date
{
    int year;
    int month;
    int date;
    void Showdate()
    {
        cout<<month<<"/"<<date<<"/"<<year;
    }
};

struct Employee 
{
    int empid;
    string name;
    int sal;
    Date joindate;
    void Showdata()
    {
        cout<<"Employee ID      :  "<<empid<<endl;
        cout<<"Employee Name    :  "<<name<<endl;
        cout<<"Employee Salary  :  "<<sal<<endl;
        cout<<"Joining Date     :  ";

    }
};

int main()
{
    Employee e1;
    e1.empid=90087;
    e1.name="Sannya";
    e1.sal=50000;
    e1.joindate.date=5;
    e1.joindate.month=10;
    e1.joindate.year=2021;
    e1.Showdata();
    e1.joindate.Showdate();

    _getch();
    return 0;

}*/

/*Q#4) Write a  C++ program using two dimensional array that will calculate the average weekly temperatures for four provinces of Pakistan

int main()
    {
        int province=4, wtemp=7;
        int temp[4][wtemp]={
        {43,41,45,38,39,37,35},
        {28,27,30,26,31,32,30},
        {31,32,31,31,31,30,29},
        {25,26,26,27,26,24,23}
    };
    int avgtemp[province][1];
    int sum, avg;
    for (int i; i<province; i++)
    {
        sum=temp[i][0]+temp[i][1]+temp[i][2]+temp[i][3]+temp[i][4]+temp[i][5]+temp[i][6];
        avg=sum/wtemp;
        //cout<<sum<<endl;
        //cout<<avg<<endl;
        avgtemp[i][1]=avg;
    }

    for (int j; j<4; j++)
    {
        cout<<"Average weekly temperature of provice "<<j+1<<"  :  "<<avgtemp[j][1]<<endl;
    }
    
    
    _getch();
    return 0;
    }*/

/*Q#5)Create a C++  application  that includes an array holding elements and it sorts all the array elements in ascending order.

int main()
{
    int arr[8]={37, 2, 6, 4, 90, 45, 67, 21};
    int len=sizeof(arr)/sizeof(arr[0]);
    int temp;
    for (int i; i<len; i++)
    {
        for (int j=i+1; j<len; j++)     //len-1
        {
            if(arr[j] < arr[i]) {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
    cout<<"Sorted array  :  ";
    for (int a; a<len; a++)
    {
        cout<<arr[a]<<" ";
    }
    _getch();
    return 0;
}*/

/*Q#6)Suppose you have a main() with three local arrays, all the same size and type (say float). 
The first two are already initialized to values. 
Write a function called addarrays() that accepts the addresses of the three arrays as arguments; 
adds the contents of the first two arrays together, element by element; and places the results in the third array before returning.
A fourth argument to this function can carry the size of the arrays. Use pointer notation throughout; 
the only place you need brackets is in defining the array.

int addarrays(float* ptr1, float* ptr2, float* ptr3, int len)
{
    float sum;
    //ptr1=arr1, ptr2=arr2, ptr3=arr3;
    //cout<<"*ptr1 : "<<*ptr1<<" *ptr2 : "<<*ptr2<<" *ptr3 : "<<ptr3<<endl;
    for (int i; i<len; i++)
    {
        sum=ptr1[i]+ptr2[i];
        ptr3[i]=sum;
    }
    for (int a; a<6; a++)
    {
        cout<<"(ptr3+a)  :  "<<*(ptr3+a)<<endl;
    };

}

int main()
{
    float arr1[6]={4.5, 7.8, 3.2, 8.0, 6.7, 1.1};
    float arr2[6]={6.8, 8.9, 7.1, 6.0, 5.3, 3.7};
    float arr3[6]={};
    int size=sizeof(arr1)/sizeof(arr1[0]);

    cout<<addarrays(arr1, arr2, arr3, size)<<endl;
    _getch();
    return 0;
}*/

 /*Q#7)Create a character array holding names of few students , assign the address of the array to a pointer 
 and pass that pointer to a function that will reverse each specific element of array and return the results to the main program 
 to display the results.

 void reverse(string* ptr)
 {
    string temp;
    int j=4;
    
    for (int i=0; i<j; i++,j--)
    {
        temp=ptr[i];
        ptr[i]=ptr[j];
        ptr[j]=temp;
        
    }   
    cout<<"Reversed Array : { ";
    for (int a; a<5; a++)
        {
            cout<<*(ptr+a)<<" ";
        }
    cout<<" } "<<endl;                                 
 }

 int main()
 {
    string char_arr[5]={"Seokjin","Namjoon","Jimin","Hoseok","Yoongi"};
    reverse(char_arr);
    _getch();
    return 0;
 }*/
